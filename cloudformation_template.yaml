AWSTemplateFormatVersion: '2010-09-09'
Description: A simple CloudFormation template to deploy a Django application on EC2.

Resources:

  # Security Group to Allow SSH, HTTP, and HTTPS Access
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, and HTTPS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # SSH Access (port 22)
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # HTTP Access (port 80)
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # HTTPS Access (port 443)

  # IAM Role for EC2 Instance
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: EC2S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource: '*'

  # Instance Profile for the IAM Role
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: 
        - ! Ref EC2InstanceRole

  # EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro  # Replace with another type if needed
      SecurityGroups:
        - ! Ref InstanceSecurityGroup
      IamInstanceProfile: ! Ref InstanceProfile
      KeyName: "REPLACE_WITH_YOUR_KEY_PAIR_NAME"  # Placeholder for SSH Key Pair (replace this)
      ImageId: "REPLACE_WITH_VALID_AMI_ID"  # Placeholder for AMI ID (replace with a valid AMI ID for your region)
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt-get update -y
          apt-get install -y python3-pip docker.io git
          systemctl start docker
          systemctl enable docker
          git clone 
          cd your-repository
          docker-compose up -d

Outputs:

  InstancePublicIP:
    Description: The public IP of the EC2 instance
    Value: ! GetAtt EC2Instance.PublicIp

  SSHCommand:
    Description: Command to connect to the instance via SSH
    Value: ! Sub "ssh -i KEY_PAIR.pem ubuntu@${EC2Instance.PublicDnsName}"
