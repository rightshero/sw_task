AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to launch an EC2 instance with an IAM role and security group for SSH, HTTP, and HTTPS access.

Resources:

  # Create an IAM role with admin privileges
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2AdminRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AdminPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  # Create an instance profile to attach the IAM role to the EC2 instance
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2InstanceRole

  # Create a security group to allow SSH, HTTP, and HTTPS access
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH, HTTP, and HTTPS access
      VpcId: !Ref VPCId # Replace with your actual VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  # Launch an EC2 instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro # Change to t3.micro if needed
      ImageId: ami-0c55b159cbfafe01f # Replace with your desired AMI ID
      KeyName: your-key-pair-name # Replace with your key pair name
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update the package manager
          yum update -y

          # Install Docker
          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user

          # Install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          # Clone the Git repository
          git clone https://github.com/swatik15/category_project.git /home/ec2-user/category_project
          
          # Change to the project directory
          cd /home/ec2-user/your-repo
          
          # Start the Docker containers using Docker Compose
          docker-compose up -d

Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID where the EC2 instance will be launched.

Outputs:
  InstanceId:
    Description: The Instance ID of the EC2 instance
    Value: !Ref EC2Instance
  InstancePublicIP:
    Description: The public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
